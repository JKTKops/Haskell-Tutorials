TODO: Make a short, skippable video 0 about the series and the language.

Primary Goal: All major points of haskell syntax, barring do-notation and language extensions
Minor goals:
1) Basic function call syntax
    1) prefix form
    2) multiple arguments
    3) infix form (backquotes, operators)
2) Function definition syntax
    1) Type signatures
    2) pattern matching, case-of, guards (otherwise), let-in, where, if-then-else
    3) wildcard: `_`
    4) Operators
3) Data declarations
    1) Distinction between type and value languages
    2) Deriving Eq, Show, Read, Ord, Enum, Bounded (discussed in depth elsewhere)
    3) Recursive data types
4) Revisit function definition with a custom data type (a tree?)
5) Starting at using the REPL
    1) Reading error messages
    2) Loading/reloading source files and importing packages
    3) :browse, :q, :?
5) Mention syntactic negation and how to fix corresponding errors
